function valeq=case4Int(E1,E12,E3,NM)
% This function calculates the intigral for case 4
% This is the same intigral as case 2 with arguements exchanged
    % on same monomer
    MIN=(10^-4)/NM;    
    
    if min(real([E1,E12,E3]))*NM<-700
        warning('overflow value ignored')
        valeq=0;
        return
    end
    
    vec=[E1,E12,E3];
    nzeros=sum(abs(vec)<MIN);
    if nzeros==3
        valeq=NM^4*(NM*(E1+E12-E3)+4)/24;
    elseif nzeros==2
        if max(abs([E1,E3]))<MIN   % 0~E1~E3
            valeq=((NM^4*(E3-2*E1)-6*NM^3)*E12^3+...
                (-6*E1*NM^3-12*NM^2)*E12^2+...
                ((12*NM-6*NM^2*E3)*exp(NM*E12)-6*NM^2 *(E3+2*E1)-12*NM)*E12+...
                12*NM*(E1+E3)*(exp(NM*E12)-1))/(12*E12^4);
        elseif max(abs([E1,E12]))<MIN  % 0~E1~E12
            valeq=(expl(1,-NM*E3)*((E1+E12)*((NM*E3)^3+3*(NM*E3)^2+6*NM*E3)...
                +3*NM*E3^2*(2+NM*E3))...
                +6*(expl(2,NM*E3)+expl(2,-NM*E3))*(E1+E12+E3))/(6*E3^5);
        elseif max(abs([E12,E3]))<MIN % 0~E12~E3
            valeq=-NM*(  (NM*(2*E12-E3)+6)*NM^2*E1^3+...
               6*(E12*NM^2+2*NM)*E1^2+...
               6*(NM*(2*E12+E3)+2+(NM*E3-2)*exp(NM*E1))*E1+12*(E3+E12)*(1-exp(NM*E1)) )/...
               (12*E1^4);
        else
            error('not an option')
        end
    elseif nzeros==1
        if abs(E1-E12)<MIN && abs(E3)<MIN
            valeq=NM*(-2*expl(3,NM*E12)+NM*E12*expl(2,NM*E12))/(E12^3);
        elseif abs(E12-E3)<MIN && abs(E1)<MIN
            valeq=2*(NM*E3*sinhl(3,NM*E3)-2*coshl(4,NM*E3))/(E3^4);
        elseif abs(E1-E3)<MIN && abs(E12)<MIN
            valeq=2*(NM*E1*sinhl(3,NM*E1)-2*coshl(4,NM*E1))/(E1^4);
        elseif abs(E1)<MIN
            valeq=((expl(3,NM*E3)+expl(3,-NM*E3)+NM*E3*expl(2,-NM*E3))*E12^2 + ...
                    expl(1,-NM*E3)*expl(2,NM*E12)*E3^2)/(E3^3*E12^2*(E3-E12));
        elseif abs(E12)<MIN   
            valeq=((expl(3,NM*E3)+expl(3,-NM*E3)+NM*E3*expl(2,-NM*E3))*E1 ^2 + ...
                    expl(1,-NM*E3)*expl(2,NM*E1 )*E3^2)/(E3^3*E1 ^2*(E3-E1 ));
        elseif abs(E3)<MIN
            valeq=NM*(E1^2*expl(3,NM*E12)-E12^2*expl(3,NM*E1))/(E1^2*E12^2*(E12-E1));
        else
            error('not an option')
        end
    else
        if (abs(E1-E12)<MIN && abs(E12-E3)<MIN)
           valeq=(1/2).*(exp(1).^E1).^((-1).*NM).*((-1)+(exp(1).^E1).^NM).*log(exp( ...
           1).^E1).^(-4).*((-2)+(exp(1).^E1).^NM.*(2+NM.*log(exp(1).^E1).*(( ...
           -2)+NM.*log(exp(1).^E1))));
        elseif abs(E1-E12)<MIN
           valeq=(1+(-1).*(exp(1).^E3).^((-1).*NM)).*log(exp(1).^E1).^(-2).*(log( ...
           exp(1).^E1)+(-1).*log(exp(1).^E3)).^(-2).*log(exp(1).^E3).^(-2).*( ...
           ((-1)+(exp(1).^E1).^NM).*log(exp(1).^E3).^2+(-1).*log(exp(1).^E1) ...
           .*log(exp(1).^E3).*((-2)+2.*(exp(1).^E1).^NM+(exp(1).^E1).^NM.* ...
           NM.*log(exp(1).^E3))+log(exp(1).^E1).^2.*((-1)+(exp(1).^E3).^NM+( ...
           exp(1).^E1).^NM.*NM.*log(exp(1).^E3)));
        elseif abs(E1-E3)<MIN
           valeq=(1+(-1).*(exp(1).^E1).^((-1).*NM)).*log(exp(1).^E1).^(-3).*(log( ...
           exp(1).^E1)+(-1).*log(exp(1).^E12)).^(-2).*log(exp(1).^E12).^(-1) ...
           .*(((-1)+(exp(1).^E1).^NM).*log(exp(1).^E12).^2+(-1).*log(exp(1) ...
           .^E1).*log(exp(1).^E12).*((-2)+2.*(exp(1).^E1).^NM+(exp(1).^E1) ...
           .^NM.*NM.*log(exp(1).^E12))+log(exp(1).^E1).^2.*((-1)+(exp(1) ...
           .^E12).^NM+(exp(1).^E1).^NM.*NM.*log(exp(1).^E12)));
        elseif abs(E12-E3)<MIN
           valeq=(1+(-1).*(exp(1).^E12).^((-1).*NM)).*log(exp(1).^E1).^(-1).*(log( ...
           exp(1).^E1)+(-1).*log(exp(1).^E12)).^(-2).*log(exp(1).^E12).^(-3) ...
           .*(((-1)+(exp(1).^E1).^NM).*log(exp(1).^E12).^2+log(exp(1).^E1) ...
           .^2.*((-1)+(exp(1).^E12).^NM+(-1).*(exp(1).^E12).^NM.*NM.*log(exp( ...
           1).^E12))+log(exp(1).^E1).*log(exp(1).^E12).*(2+(-2).*(exp(1) ...
           .^E12).^NM+(exp(1).^E12).^NM.*NM.*log(exp(1).^E12)));
        else
           valeq=(1+(-1).*(exp(1).^E3).^((-1).*NM)).*log(exp(1).^E1).^(-1).*(log( ...
           exp(1).^E1)+(-1).*log(exp(1).^E12)).^(-1).*log(exp(1).^E12).^(-1) ...
           .*(log(exp(1).^E1)+(-1).*log(exp(1).^E3)).^(-1).*(log(exp(1).^E12) ...
           +(-1).*log(exp(1).^E3)).^(-1).*log(exp(1).^E3).^(-2).*(((-1)+(exp( ...
           1).^E1).^NM).*log(exp(1).^E12).*(log(exp(1).^E12)+(-1).*log(exp(1) ...
           .^E3)).*log(exp(1).^E3)+log(exp(1).^E1).^2.*(((-1)+(exp(1).^E3) ...
           .^NM).*log(exp(1).^E12)+(-1).*((-1)+(exp(1).^E12).^NM).*log(exp(1) ...
           .^E3))+log(exp(1).^E1).*((-1).*((-1)+(exp(1).^E3).^NM).*log(exp(1) ...
           .^E12).^2+((-1)+(exp(1).^E12).^NM).*log(exp(1).^E3).^2));     
    %         x= expl(3,NM*E1 )*E3 -expl(3,NM*E3 )*E1 ;
    %         y= expl(3,NM*E3 )*E12-expl(3,NM*E12)*E3 ;
    %         z= expl(3,NM*E12)*E1 -expl(3,NM*E1 )*E12; 
    %         valeq=expl(1,-NM*E3)*(x*E12^2+y*E1^2+z*E3^2)/...
    %           (-E1*E12*E3^2*(E12-E3)*(E1-E3)*(E1-E12));
        end
    end    
%{
    if max(abs([E1,E12,E3]))<MIN  % 0~E1~E12~E3
        valeq=NM^4*(NM*(E1+E12-E3)+4)/24;
    elseif max(abs([E1,E3]))<MIN   % 0~E1~E3
        valeq=((NM^4*(E3-2*E1)-6*NM^3)*E12^3+...
            (-6*E1*NM^3-12*NM^2)*E12^2+...
            ((12*NM-6*NM^2*E3)*exp(NM*E12)-6*NM^2 *(E3+2*E1)-12*NM)*E12+...
            12*NM*(E1+E3)*(exp(NM*E12)-1))/(12*E12^4);
    elseif max(abs([E1,E12]))<MIN  % 0~E1~E12
        valeq=(expl(1,-NM*E3)*((E1+E12)*((NM*E3)^3+3*(NM*E3)^2+6*NM*E3)...
            +3*NM*E3^2*(2+NM*E3))...
            +6*(expl(2,NM*E3)+expl(2,-NM*E3))*(E1+E12+E3))/(6*E3^5);
    elseif max(abs([E12,E3]))<MIN % 0~E12~E3
        valeq=-NM*(  (NM*(2*E12-E3)+6)*NM^2*E1^3+...
           6*(E12*NM^2+2*NM)*E1^2+...
           6*(NM*(2*E12+E3)+2+(NM*E3-2)*exp(NM*E1))*E1+12*(E3+E12)*(1-exp(NM*E1)) )/...
           (12*E1^4);
    elseif (abs(E1-E12)<MIN && abs(E12-E3)<MIN)
       valeq=(1/2).*(exp(1).^E1).^((-1).*NM).*((-1)+(exp(1).^E1).^NM).*log(exp( ...
       1).^E1).^(-4).*((-2)+(exp(1).^E1).^NM.*(2+NM.*log(exp(1).^E1).*(( ...
       -2)+NM.*log(exp(1).^E1))));
    elseif abs(E1-E12)<MIN && abs(E3)<MIN
        valeq=NM*(-2*expl(3,NM*E12)+NM*E12*expl(2,NM*E12))/(E12^3);
    elseif abs(E12-E3)<MIN && abs(E1)<MIN
        valeq=2*(NM*E3*sinh(NM*E3)-2*cosh(NM*E3)+2)/(E3^4);
    elseif abs(E1-E3)<MIN && abs(E12)<MIN
        valeq=2*(NM*E1*sinh(NM*E1)-2*cosh(NM*E1)+2)/(E1^4);
    elseif abs(E1-E12)<MIN
       valeq=(1+(-1).*(exp(1).^E3).^((-1).*NM)).*log(exp(1).^E1).^(-2).*(log( ...
       exp(1).^E1)+(-1).*log(exp(1).^E3)).^(-2).*log(exp(1).^E3).^(-2).*( ...
       ((-1)+(exp(1).^E1).^NM).*log(exp(1).^E3).^2+(-1).*log(exp(1).^E1) ...
       .*log(exp(1).^E3).*((-2)+2.*(exp(1).^E1).^NM+(exp(1).^E1).^NM.* ...
       NM.*log(exp(1).^E3))+log(exp(1).^E1).^2.*((-1)+(exp(1).^E3).^NM+( ...
       exp(1).^E1).^NM.*NM.*log(exp(1).^E3)));
    elseif abs(E1-E3)<MIN
       valeq=(1+(-1).*(exp(1).^E1).^((-1).*NM)).*log(exp(1).^E1).^(-3).*(log( ...
       exp(1).^E1)+(-1).*log(exp(1).^E12)).^(-2).*log(exp(1).^E12).^(-1) ...
       .*(((-1)+(exp(1).^E1).^NM).*log(exp(1).^E12).^2+(-1).*log(exp(1) ...
       .^E1).*log(exp(1).^E12).*((-2)+2.*(exp(1).^E1).^NM+(exp(1).^E1) ...
       .^NM.*NM.*log(exp(1).^E12))+log(exp(1).^E1).^2.*((-1)+(exp(1) ...
       .^E12).^NM+(exp(1).^E1).^NM.*NM.*log(exp(1).^E12)));
    elseif abs(E12-E3)<MIN
       valeq=(1+(-1).*(exp(1).^E12).^((-1).*NM)).*log(exp(1).^E1).^(-1).*(log( ...
       exp(1).^E1)+(-1).*log(exp(1).^E12)).^(-2).*log(exp(1).^E12).^(-3) ...
       .*(((-1)+(exp(1).^E1).^NM).*log(exp(1).^E12).^2+log(exp(1).^E1) ...
       .^2.*((-1)+(exp(1).^E12).^NM+(-1).*(exp(1).^E12).^NM.*NM.*log(exp( ...
       1).^E12))+log(exp(1).^E1).*log(exp(1).^E12).*(2+(-2).*(exp(1) ...
       .^E12).^NM+(exp(1).^E12).^NM.*NM.*log(exp(1).^E12)));
    else
       valeq=(1+(-1).*(exp(1).^E3).^((-1).*NM)).*log(exp(1).^E1).^(-1).*(log( ...
       exp(1).^E1)+(-1).*log(exp(1).^E12)).^(-1).*log(exp(1).^E12).^(-1) ...
       .*(log(exp(1).^E1)+(-1).*log(exp(1).^E3)).^(-1).*(log(exp(1).^E12) ...
       +(-1).*log(exp(1).^E3)).^(-1).*log(exp(1).^E3).^(-2).*(((-1)+(exp( ...
       1).^E1).^NM).*log(exp(1).^E12).*(log(exp(1).^E12)+(-1).*log(exp(1) ...
       .^E3)).*log(exp(1).^E3)+log(exp(1).^E1).^2.*(((-1)+(exp(1).^E3) ...
       .^NM).*log(exp(1).^E12)+(-1).*((-1)+(exp(1).^E12).^NM).*log(exp(1) ...
       .^E3))+log(exp(1).^E1).*((-1).*((-1)+(exp(1).^E3).^NM).*log(exp(1) ...
       .^E12).^2+((-1)+(exp(1).^E12).^NM).*log(exp(1).^E3).^2));     
%         x= expl(3,NM*E1 )*E3 -expl(3,NM*E3 )*E1 ;
%         y= expl(3,NM*E3 )*E12-expl(3,NM*E12)*E3 ;
%         z= expl(3,NM*E12)*E1 -expl(3,NM*E1 )*E12; 
%         valeq=expl(1,-NM*E3)*(x*E12^2+y*E1^2+z*E3^2)/...
%           (-E1*E12*E3^2*(E12-E3)*(E1-E3)*(E1-E12));
    end 
    %}
    if valeq<0 && isreal([E1,E12,E3])
        sprintf('E1=%g, E12=%g, E3=%g, valeq=%g',E1,E12,E3,valeq)
        error('value should not be negitive')
    end
    if isnan(valeq)
        sprintf('E1=%g, E12=%g, E3=%g, valeq=%g',E1,E12,E3,valeq)
        error('NaN encountered')        
    end
end